@model PaginatedList<QuestionsViewModel>
@{
    string view = "_AllQuestions";
   
}
<table class="table table-striped">
    <thead>
        <tr>
            <th>Question</th>
            <th>Answer</th>
            <th>Status</th>
            <th>Product Name</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        <div style="display:flex;justify-content:space-evenly;align-items:center;align-content:center">

            <div style="display: flex; align-items: center; gap: 10px;margin:10px">
                <div style="display: flex; align-items: center; margin: 0;">
                    <label for="pageSize" style="margin-right: 10px;">Items per page:</label>
                    <select style="max-width:70px; display: inline-block;" onchange="handleChange(1, '@view')" id="@view" class="form-control">
                        <option value="">@ViewBag.pageSize</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="15">15</option>
                        <option value="20">20</option>
                        <option value="0">Show All</option>
                    </select>
                </div>
                <div style="display: flex; align-items: center; margin: 0;">
                    
                        <input hidden name="view" id="filterView" value="@view" />
                        <label for="productQuery" style="margin-right: 10px;"></label>
                    <input class="form-control" id="@($"{view}Param")" placeholder="Search by Product Name" name="productName" required style="margin-right: 10px;" />
                    <button class="btn btn-secondary" onclick="handleSearch('@view')" >Search</button>
                    
                </div>
            </div>

        </div>
        @foreach (var faq in Model.Items)
        {
            <tr>
                <td>@faq.Question</td>
                <td>@faq.Answer</td>
                <td>
                    @if (string.IsNullOrEmpty(faq.Answer))
                    {
                        <span class="text-danger">Pending</span>
                    }
                    else
                    {
                        <span>Answered</span>
                    }
                </td>
                <td>@faq.ProductName</td>
                <td>
                    <input type="hidden" id="viewName" value="_AllQuestions" />
                    @if (!string.IsNullOrEmpty(faq.Answer))
                    {
                        <button class="btn btn-secondary btn-sm" onclick="openEditModal('@faq.Question', '@faq.Id', '@faq.Answer', '_AllQuestions')">Edit Answer</button>
                       
                    }
                    <button class="btn btn-danger btn-sm" onclick="confirmDelete(@faq.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
<nav>
    <ul class="pagination">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" href="#" data-page="@(Model.PageIndex - 1)" data-view="@view">Previous</a>
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                <a class="page-link" href="#" data-page="@i" data-view="@view">@i</a>
            </li>
        }
        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" href="#" data-page="@(Model.PageIndex + 1)" data-view="@view">Next</a>
            </li>
        }
    </ul>
</nav>