@model FAQViewModel
@using System.Linq

<div style="display: flex; justify-content: space-between; align-items: center; padding: 10px; background-color: #f8f9fa; border-bottom: 1px solid #dee2e6;">
  
   
    <h3 id="faq-heading" style="cursor: pointer; margin: 0;">Frequently Asked Questions</h3>
    @if (Model.AllowAnonymousUsers || (!Model.AllowAnonymousUsers && Model.UserLoggedIn))
    {
    <button id="askQuestionButton" style="padding: 10px 20px; background-color: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer;">Ask a Question</button>
        
    }
    @if(!Model.AllowAnonymousUsers && !Model.UserLoggedIn)
    {
        <a href="@Url.Action("Configure","Dashboard")">Login to ask a question</a>
    }

</div>

<div id="faq-content" style="display: block; padding: 20px;">
    <!-- Changed display to block -->
    <div id="accordion">
        @if (Model.FAQs != null && Model.FAQs.Any())
        {
            foreach (var faq in Model.FAQs)
            {
                <div>
                    <div class="faq-question" style="padding: 10px; cursor: pointer; border-bottom: 1px solid #dee2e6; font-weight: bold; font-size: 1.1em; display: flex; justify-content: space-between; align-items: center;">
                        @faq.Question <span style="content: ''; display: inline-block; width: 0; height: 0; margin-left: 10px; border-left: 5px solid transparent; border-right: 5px solid transparent; border-top: 5px solid black;"></span>
                    </div>
                    <div class="faq-answer" style="padding: 10px; background-color: #f8f9fa; font-style: italic; display: none;">
                        @faq.Answer
                    </div>
                </div>
            }
        }
        else
        {
            <div style="padding: 10px; background-color: #f8f9fa;">
                No FAQs available.
            </div>
        }
    </div>
</div>

<div id="askQuestionModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); justify-content: center; align-items: center;">
    <div style="background-color: white; padding: 20px; border-radius: 10px; width: 500px; position: relative;">
        <span id="closeModal" style="position: absolute; top: 10px; right: 10px; cursor: pointer;">&times;</span>
        <h4 style="text-align: center;">Ask a Question</h4>
        <form id="questionForm">
            <div class="form-group">
                <label for="Question">Question:</label>
                <textarea maxlength="255" required id="question" name="question" style="width: 100%; padding: 10px; border: 1px solid #ced4da; border-radius: 5px;" placeholder="Your question here ..."></textarea>
            </div>
            <input type="hidden" id="productId" name="productId" value="@Model.ProductId" />
            <input type="hidden" id="productName" name="productName" value="@ViewBag.ProductName" />
            <div style="text-align: center;">
                <button type="button" id="submitQuestionButton" style="padding: 20px 50px; background-color: #007bff; color: white; border: none; border-radius: 5px; cursor: pointer; margin-top: 10px;">Ask</button>
            </div>
        </form>
    </div>
</div>

<div id="successMessage" style=" display: none;max-width: 400px;margin: 20px;background-color: #d4edda;color: #155724;border: 1px solid #c3e6cb;padding: 10px;text-align: center; border-radius: 5px;" class="success-message">
    <h4>Your question has been received and is currently under review. We'll provide an answer as soon as possible.</h4>
    </div>

<script asp-location="Footer">

    $(document).ready(function () {
        $('#questionForm').submit(function (event) {
            console.log("Entered in function");
            event.preventDefault();
            var question = $('#question').val();
            var productId = $('#productId').val();
            var productName = $('#productName').val();
            var formData = $(this).serialize();
            $.ajax({
                type: 'POST',
                url: '/Retail/AddQuestion',
                data: {
                    question, // Name should match the action parameter names
                    productId,
                    productName// Name should match the action parameter names
                },
                success: function (response) {
                    console.log("Success");
                    handleSuccess();
                },
                error: function (error) {
                    console.log("failure");
                    handleFailure();
                }
            });
        });

        document.querySelector('#faq-heading').addEventListener('click', function () {
            var faqContent = document.querySelector('#faq-content');
            faqContent.style.display = faqContent.style.display === 'none' ? 'block' : 'none';
        });

        var faqQuestions = document.querySelectorAll('.faq-question');
        faqQuestions.forEach(function (element) {
            element.addEventListener('click', function () {
                var answer = this.nextElementSibling;
                answer.style.display = answer.style.display === 'none' ? 'block' : 'none';
            });
        });

        document.querySelector('#askQuestionButton').addEventListener('click', function () {
            document.querySelector('#askQuestionModal').style.display = 'flex'; // Use flex to center the modal
        });

        document.querySelector('#closeModal').addEventListener('click', function () {
            document.querySelector('#askQuestionModal').style.display = 'none';
        });

        document.querySelector('#submitQuestionButton').addEventListener('click', function (e) {
            e.preventDefault();
            submitQuestion();
        });
    });

    function submitQuestion() {
        var question = $('#question').val();
        var productId = $('#productId').val();
        $.ajax({
            type: 'POST',
            url: '/Retail/AddQuestion',
            data: {
                question: question, // Name should match the action parameter names
                productId: productId // Name should match the action parameter names
            },
            success: function (response) {
                console.log("Success");
                handleSuccess();
            },
            error: function (error) {
                console.log("failure");
                handleFailure();
            }
        });
    }

    function handleSuccess() {
        console.log("Entered handled success");
        document.querySelector('#askQuestionModal').style.display = 'none';
        document.querySelector('#question').value = '';
        document.querySelector('#successMessage').style.display = 'block';
        setTimeout(function () {
            document.querySelector('#successMessage').style.display = 'none';
        }, 5000);
    }

    function handleFailure() {
        alert('Input Field cannot be empty');
    }

    function closeModal() {
        document.querySelector('#askQuestionModal').style.display = 'none';
    }
</script>
